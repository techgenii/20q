name: Deploy Whisper Chase SAM App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-2
      PYTHON_VERSION: '3.13'
      STACK_NAME: 'whisprechase'
      ELEVENLABS_VOICE_ID: '9BWtsMINqrJLrRacOk9x'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify environment variables
        run: |
          echo "Verifying required environment variables..."
          if [ -z "${{ secrets.SUPABASE_URL }}" ]; then echo "ERROR: SUPABASE_URL is not set"; exit 1; fi
          if [ -z "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" ]; then echo "ERROR: SUPABASE_SERVICE_ROLE_KEY is not set"; exit 1; fi
          if [ -z "${{ secrets.SUPABASE_ANON_KEY }}" ]; then echo "ERROR: SUPABASE_ANON_KEY is not set"; exit 1; fi
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then echo "ERROR: OPENAI_API_KEY is not set"; exit 1; fi
          if [ -z "${{ secrets.ELEVENLABS_API_KEY }}" ]; then echo "ERROR: ELEVENLABS_API_KEY is not set"; exit 1; fi
          if [ -z "${{ env.ELEVENLABS_VOICE_ID }}" ]; then echo "ERROR: ELEVENLABS_VOICE_ID is not set"; exit 1; fi
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then echo "ERROR: AWS_ACCESS_KEY_ID is not set"; exit 1; fi
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then echo "ERROR: AWS_SECRET_ACCESS_KEY is not set"; exit 1; fi
          echo "âœ… All required environment variables are set"

      - name: Install dependencies
        run: |
          pip install aws-sam-cli pytest
          pip install -r requirements.txt

      - name: Run tests
        run: |
          cd backend
          PYTHONPATH=$PYTHONPATH:. pytest tests/
        env:
          SUPABASEURL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          ELEVENLABS_VOICE_ID: ${{ env.ELEVENLABS_VOICE_ID }}

      - name: Build SAM app
        run: sam build

      - name: Validate SAM template
        run: sam validate --region ${{ env.AWS_REGION }}

      - name: Deploy SAM app
        env:
          SUPABASEURL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          ELEVENLABS_VOICE_ID: ${{ env.ELEVENLABS_VOICE_ID }}
        run: |
          sam deploy \
            --config-file samconfig.yaml \
            --config-env default \
            --parameter-overrides \
              "ParameterKey=SUPABASEURL,ParameterValue=${{ secrets.SUPABASE_URL }}" \
              "ParameterKey=SUPABASE_SERVICE_ROLE_KEY,ParameterValue=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
              "ParameterKey=SUPABASE_ANON_KEY,ParameterValue=${{ secrets.SUPABASE_ANON_KEY }}" \
              "ParameterKey=OPENAI_API_KEY,ParameterValue=${{ secrets.OPENAI_API_KEY }}" \
              "ParameterKey=ELEVENLABS_API_KEY,ParameterValue=${{ secrets.ELEVENLABS_API_KEY }}" \
              "ParameterKey=ELEVENLABS_VOICE_ID,ParameterValue=${{ env.ELEVENLABS_VOICE_ID }}"

      - name: Stream Lambda logs after deployment
        if: success()
        run: |
          sam logs \
            --stack-name ${{ env.STACK_NAME }} \
            --tail \
            --region ${{ env.AWS_REGION }} \
            --name WhisperChaseFunction
        continue-on-error: true